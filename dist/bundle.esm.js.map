{"version":3,"file":"bundle.esm.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/Sidebar/Sidebar.tsx","../src/shared/data.ts","../src/components/ProductsList/ProductsList.tsx","../src/components/Dashboard/Dashboard.helpers.tsx","../src/components/Dashboard/Dashboard.tsx","../src/components/Settings/DiamondContainer.tsx","../src/components/Settings/Settings.helpers.ts","../src/components/Settings/Settings.tsx","../src/components/ProductsRoutes/ProductsRoutes.tsx","../src/components/ProductsContainer/ProductsContainer.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from 'grommet';\r\n\r\nimport styles from './Sidebar.scss';\r\n\r\nconst navData: { path: string; label: string }[] = [\r\n  {\r\n    path: 'products-list',\r\n    label: 'Products List'\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    label: 'Dashboard'\r\n  },\r\n  {\r\n    path: 'settings',\r\n    label: 'Settings'\r\n  }\r\n];\r\n\r\nexport const Sidebar = () => (\r\n  <Nav background='brand' direction='row' pad='medium'>\r\n    {navData.map(({ path, label }) => (\r\n      <Link key={path} className={styles.link} to={`/products/${path}`}>\r\n        {label}\r\n      </Link>\r\n    ))}\r\n  </Nav>\r\n);\r\n","export const progress: Product.Progress[] = [\r\n  { name: 'Facebook', location: 'Menlo Park', percent: 20 },\r\n  { name: 'Apple', location: 'Cupertino', percent: 60 },\r\n  { name: 'Amazon', location: 'Seattle', percent: 40 },\r\n  { name: 'Netflix', location: 'Los Gatos', percent: 100 },\r\n  { name: 'Google', location: 'Mountain View', percent: 80 }\r\n];\r\n","import React from 'react';\r\nimport { Box, Grommet, grommet, List } from 'grommet';\r\n\r\nimport { progress } from '../../shared/data';\r\nimport styles from './ProductsList.scss';\r\n\r\nexport const ProductsList = () => (\r\n  <Grommet className={styles.container} theme={grommet}>\r\n    <Box align='center' className={styles.list} pad='medium'>\r\n      <List\r\n        data={progress}\r\n        primaryKey={React.useCallback(item => item.name, [])}\r\n        secondaryKey={React.useCallback(item => `${item.percent}%`, [])}\r\n      />\r\n    </Box>\r\n  </Grommet>\r\n);\r\n","import React from 'react';\r\nimport { Box, CheckBox, Meter } from 'grommet';\r\n\r\nexport const renderColumnPercent = (datum: Product.Progress) => (\r\n  <Box pad={{ vertical: 'small' }}>\r\n    <Meter size='small' thickness='small' values={[{ value: datum.percent }]} />\r\n  </Box>\r\n);\r\n\r\nexport const renderColumnCheck = (checked: string[], onCheck: any) => (\r\n  datum: Product.Progress\r\n) => (\r\n  <CheckBox\r\n    key={datum.name}\r\n    checked={checked.includes(datum.name)}\r\n    onChange={e => onCheck(e, datum.name)}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Box, Grommet, grommet, DataTable, Text, CheckBox } from 'grommet';\r\n\r\nimport { progress } from '../../shared/data';\r\nimport { renderColumnCheck, renderColumnPercent } from './Dashboard.helpers';\r\nimport styles from './Dashboard.scss';\r\n\r\nexport const Dashboard: React.FC = () => {\r\n  const [checked, setChecked] = React.useState<string[]>([]);\r\n\r\n  const onCheck = (event: any, value: string) => {\r\n    if (event.target.checked) {\r\n      setChecked([...checked, value]);\r\n    } else {\r\n      setChecked(checked.filter(item => item !== value));\r\n    }\r\n  };\r\n\r\n  const columnDashboard = [\r\n    {\r\n      property: 'name',\r\n      header: <Text>Name</Text>,\r\n      primary: true\r\n    },\r\n    {\r\n      property: 'location',\r\n      header: <Text>Location</Text>,\r\n      primary: true\r\n    },\r\n    {\r\n      property: 'percent',\r\n      header: 'Complete',\r\n      render: renderColumnPercent\r\n    }\r\n  ];\r\n\r\n  const controlledColumns = columnDashboard.map(col => ({ ...col }));\r\n\r\n  const onCheckAll = (event: any) =>\r\n    setChecked(event.target.checked ? progress.map(datum => datum.name) : []);\r\n\r\n  return (\r\n    <Grommet theme={grommet}>\r\n      <Box align='center' pad='medium'>\r\n        <DataTable\r\n          className={styles.dashboardTable}\r\n          columns={[\r\n            {\r\n              property: 'checkbox',\r\n              render: renderColumnCheck(checked, onCheck),\r\n              header: (\r\n                <CheckBox\r\n                  checked={checked.length === progress.length}\r\n                  indeterminate={\r\n                    checked.length > 0 && checked.length < progress.length\r\n                  }\r\n                  onChange={onCheckAll}\r\n                />\r\n              ),\r\n              sortable: false\r\n            },\r\n            ...controlledColumns\r\n          ].map(col => ({ ...col }))}\r\n          data={progress}\r\n          size='medium'\r\n          sortable={true}\r\n        />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport { Diamond } from 'grommet-icons';\r\n\r\nexport const DiamondContainer = ({\r\n  id,\r\n  name,\r\n  location,\r\n  percent,\r\n  textSize\r\n}: any) => (\r\n  <Box key={id} align='center' alignSelf='center' direction='row' gap='medium'>\r\n    <Diamond color='neutral-3' id={id} size='xlarge' />\r\n    <Box align='center'>\r\n      <Text size='medium' weight='bold'>\r\n        {name}\r\n      </Text>\r\n      {percent && <Text size={textSize}> Complete: {percent}% </Text>}\r\n      {location && <Text size={textSize}> Location: {location} </Text>}\r\n    </Box>\r\n  </Box>\r\n);\r\n","import { grommet } from 'grommet';\r\nimport { deepMerge } from 'grommet/utils';\r\n\r\nexport const customTheme = deepMerge(grommet, {\r\n  diagram: {\r\n    extend: `@keyframes\r\n  example {\r\n    to {\r\n      stroke-dashoffset: 0;\r\n    }\r\n  }\r\n  path {\r\n    stroke-dasharray: 500;\r\n    stroke-dashoffset: 500;\r\n    animation: example 3s linear forwards;\r\n  }`\r\n  }\r\n});\r\n\r\nexport const connection = (fromTarget: any, toTarget: any, { ...rest }) => ({\r\n  fromTarget,\r\n  toTarget,\r\n  anchor: 'vertical',\r\n  color: 'accent-4',\r\n  thickness: 'xsmall',\r\n  round: true,\r\n  type: 'curved',\r\n  ...rest\r\n});\r\n","import React from 'react';\r\nimport { Box, Diagram, Grommet, Stack } from 'grommet';\r\n\r\nimport { progress } from '../../shared/data';\r\nimport { DiamondContainer } from './DiamondContainer';\r\nimport { connection, customTheme } from './Settings.helpers';\r\n\r\nexport const Settings = () => {\r\n  const [draw, setDraw] = React.useState(true);\r\n\r\n  const renderDiamond = React.useCallback(\r\n    id => (\r\n      <DiamondContainer\r\n        key={id}\r\n        id={id}\r\n        location={progress[id - 1].location}\r\n        name={progress[id - 1].name}\r\n        percent={progress[id - 1].percent}\r\n        textSize='small'\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDraw(value => !value);\r\n    }, 1500);\r\n    return () => clearInterval(timer);\r\n  }, [setDraw]);\r\n\r\n  const connections: any[] = [];\r\n\r\n  if (draw) {\r\n    connections.push(connection('6', '1', { anchor: 'vertical' }));\r\n    connections.push(connection('6', '2', { anchor: 'vertical' }));\r\n    connections.push(connection('6', '3', { anchor: 'vertical' }));\r\n    connections.push(connection('7', '4', { anchor: 'vertical' }));\r\n    connections.push(connection('7', '5', { anchor: 'vertical' }));\r\n    connections.push(connection('7', '6', { anchor: 'vertical' }));\r\n  }\r\n\r\n  if (progress.length === 0) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <Grommet theme={customTheme}>\r\n      <Box align='center'>\r\n        <Box pad='large'>\r\n          <Stack>\r\n            <Box>\r\n              <Box alignSelf='center' margin={{ bottom: 'medium' }}>\r\n                <DiamondContainer\r\n                  key={1}\r\n                  id={1}\r\n                  location={progress[0].location}\r\n                  name={progress[0].name}\r\n                  percent={progress[0].percent}\r\n                  textSize='small'\r\n                />\r\n\r\n                <Box\r\n                  id='6'\r\n                  margin={{ bottom: 'large', top: 'xsmall' }}\r\n                  width='xsmall'\r\n                />\r\n              </Box>\r\n\r\n              <Box direction='row' gap='xlarge'>\r\n                {[2, 3].map(renderDiamond)}\r\n              </Box>\r\n\r\n              <Box alignSelf='center' margin={{ bottom: 'xsmall' }}>\r\n                <Box\r\n                  id='7'\r\n                  margin={{ bottom: 'large', top: 'large' }}\r\n                  width='xsmall'\r\n                />\r\n              </Box>\r\n\r\n              <Box direction='row' gap='xlarge'>\r\n                {[4, 5].map(renderDiamond)}\r\n              </Box>\r\n            </Box>\r\n            <Diagram connections={connections} />\r\n          </Stack>\r\n        </Box>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { ProductsList } from '../ProductsList/ProductsList';\r\nimport { Dashboard } from '../Dashboard/Dashboard';\r\nimport { Settings } from '../Settings/Settings';\r\n\r\nexport const ProductsRoutes = () => (\r\n  <Switch>\r\n    <Route path='/products/products-list'>\r\n      <ProductsList />\r\n    </Route>\r\n    <Route path='/products/dashboard'>\r\n      <Dashboard />\r\n    </Route>\r\n    <Route path='/products/settings'>\r\n      <Settings />\r\n    </Route>\r\n  </Switch>\r\n);\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Sidebar } from '../Sidebar/Sidebar';\r\nimport { ProductsRoutes } from '../ProductsRoutes/ProductsRoutes';\r\nimport styles from './ProductsContainer.scss';\r\n\r\nexport const ProductsContainer: React.FC = () => (\r\n  <div className={styles.container}>\r\n    <BrowserRouter>\r\n      <Sidebar />\r\n      <ProductsRoutes />\r\n    </BrowserRouter>\r\n  </div>\r\n);\r\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","navData","path","label","Sidebar","React","Nav","background","direction","pad","_a","Link","key","className","styles","to","progress","name","location","percent","ProductsList","Grommet","theme","grommet","Box","align","List","data","primaryKey","item","secondaryKey","renderColumnPercent","datum","vertical","Meter","size","thickness","values","value","renderColumnCheck","checked","onCheck","CheckBox","onChange","e","Dashboard","setChecked","controlledColumns","columnDashboard","property","header","Text","primary","render","col","DataTable","columns","__spreadArrays","event","indeterminate","onCheckAll","sortable","DiamondContainer","id","textSize","alignSelf","gap","Diamond","color","weight","customTheme","deepMerge","diagram","extend","connection","fromTarget","toTarget","anchor","round","Settings","draw","setDraw","renderDiamond","timer","setInterval","clearInterval","connections","Stack","margin","bottom","top","width","map","Diagram","ProductsRoutes","Switch","Route","ProductsContainer","BrowserRouter"],"mappings":"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"}